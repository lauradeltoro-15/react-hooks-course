{"ast":null,"code":"var _jsxFileName = \"/Users/lauradeltorososa/Desktop/React-hooks-course/Pluralsight-react-hooks-course/01_Basic-react-hooks/useState/src/ImageToggleOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect } from 'react';\n\nconst ImageToggleOnScroll = ({\n  primaryImg,\n  secondaryImg\n}) => {\n  const imageRef = useRef(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n    setInView(isInView());\n    setIsLoading(false);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  });\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n\n  const isInView = () => {\n    if (imageRef.current) {\n      const rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    return false;\n  };\n\n  const scrollHandler = () => setInView(() => isInView());\n\n  return __jsx(\"img\", {\n    src: inView ? secondaryImg : primaryImg,\n    alt: \"\",\n    ref: imageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["/Users/lauradeltorososa/Desktop/React-hooks-course/Pluralsight-react-hooks-course/01_Basic-react-hooks/useState/src/ImageToggleOnScroll.js"],"names":["React","useRef","useState","useEffect","ImageToggleOnScroll","primaryImg","secondaryImg","imageRef","isLoading","setIsLoading","window","addEventListener","scrollHandler","setInView","isInView","removeEventListener","inView","current","rect","getBoundingClientRect","top","bottom","innerHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AAE1D,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACC,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACDC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACAC,IAAAA,SAAS,CAACC,QAAQ,EAAT,CAAT;AACAL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,WAAQ,MAAM;AACVC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCH,aAArC;AACH,KAFD;AAGH,GAPQ,CAAT;AASA,QAAM;AAAA,OAACI,MAAD;AAAA,OAASH;AAAT,MAAsBX,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMY,QAAQ,GAAG,MAAM;AACnB,QAAIP,QAAQ,CAACU,OAAb,EAAsB;AAClB,YAAMC,IAAI,GAAGX,QAAQ,CAACU,OAAT,CAAiBE,qBAAjB,EAAb;AACA,aAAOD,IAAI,CAACE,GAAL,IAAY,CAAZ,IAAiBF,IAAI,CAACG,MAAL,IAAeX,MAAM,CAACY,WAA9C;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAQA,QAAMV,aAAa,GAAG,MAAMC,SAAS,CAAC,MAAMC,QAAQ,EAAf,CAArC;;AAEA,SACI;AACI,IAAA,GAAG,EAAEE,MAAM,GAAGV,YAAH,GAAkBD,UADjC;AAEI,IAAA,GAAG,EAAC,EAFR;AAEW,IAAA,GAAG,EAAEE,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CA9BD;;AAgCA,eAAeH,mBAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\n\nconst ImageToggleOnScroll = ({ primaryImg, secondaryImg }) => {\n\n    const imageRef = useRef(null)\n     const [isLoading, setIsLoading] = useState(true)\n    useEffect(() => {\n        window.addEventListener(\"scroll\", scrollHandler)\n        setInView(isInView())\n        setIsLoading(false)\n        return (() => {\n            window.removeEventListener(\"scroll\", scrollHandler)\n        })\n    })\n\n    const [inView, setInView] = useState(false)\n\n    const isInView = () => {\n        if (imageRef.current) {\n            const rect = imageRef.current.getBoundingClientRect()\n            return rect.top >= 0 && rect.bottom <= window.innerHeight\n        }\n        return false\n    }\n\n    const scrollHandler = () => setInView(() => isInView())\n\n    return (\n        <img \n            src={inView ? secondaryImg : primaryImg}\n            alt=\"\" ref={imageRef}\n        />)\n}\n\nexport default ImageToggleOnScroll"]},"metadata":{},"sourceType":"module"}